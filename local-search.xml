<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Spring的事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="转账业务环境搭建"><a href="#转账业务环境搭建" class="headerlink" title="转账业务环境搭建"></a>转账业务环境搭建</h1><h4 id="1，导入坐标"><a href="#1，导入坐标" class="headerlink" title="1，导入坐标"></a>1，导入坐标</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//设置jdk版本</span><br>&lt;properties&gt;<br>    &lt;maven.compiler.source&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.source&gt;<br>    &lt;maven.compiler.target&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.target&gt;<br>&lt;/properties&gt;<br>    <br>&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br>      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">1.9</span><span class="hljs-number">.7</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-test&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;c3p0&lt;/groupId&gt;<br>      &lt;artifactId&gt;c3p0&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">0.9</span><span class="hljs-number">.1</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;mysql&lt;/groupId&gt;<br>      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.1</span><span class="hljs-number">.32</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;junit&lt;/groupId&gt;<br>      &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">4.12</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>  &lt;/dependencies&gt;<br></code></pre></td></tr></table></figure><h4 id="2-创建实体类Account"><a href="#2-创建实体类Account" class="headerlink" title="2,创建实体类Account"></a>2,创建实体类Account</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Account</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> money;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getMoney</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> money;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMoney</span><span class="hljs-params">(<span class="hljs-type">double</span> money)</span> &#123;<br>        <span class="hljs-built_in">this</span>.money = money;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-Dao层接口与实现"><a href="#3-Dao层接口与实现" class="headerlink" title="3,Dao层接口与实现"></a>3,Dao层接口与实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接口</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">AccountDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan,<span class="hljs-type">double</span> money)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan,<span class="hljs-type">double</span> money)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//实现</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountDao</span> &#123;<br><br>    <span class="hljs-keyword">private</span> JdbcTemplate jdbcTemplate;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setJdbcTemplate</span><span class="hljs-params">(JdbcTemplate jdbcTemplate)</span> &#123;<br>        <span class="hljs-built_in">this</span>.jdbcTemplate = jdbcTemplate;<br>    &#125;<br>    <br><span class="hljs-comment">//转出钱的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money-? where name=?&quot;</span>,money,outMan);<br>    &#125;<br><br>    <span class="hljs-comment">//转入钱的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money+? where name=?&quot;</span>,money,inMan);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4，Service业务层调用Dao层"><a href="#4，Service业务层调用Dao层" class="headerlink" title="4，Service业务层调用Dao层"></a>4，Service业务层调用Dao层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountService</span> &#123;<br><br>    <span class="hljs-keyword">private</span> AccountDao accountDao;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAccountDao</span><span class="hljs-params">(AccountDao accountDao)</span> &#123;<br>        <span class="hljs-built_in">this</span>.accountDao = accountDao;<br>    &#125;<br><br>    <span class="hljs-comment">//转账方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transfer</span><span class="hljs-params">(String outMan, String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        accountDao.out(outMan,money);<br>        accountDao.in(inMan,money);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="5-web层调用业务层"><a href="#5-web层调用业务层" class="headerlink" title="5,web层调用业务层"></a>5,web层调用业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountController</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">app</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span>    <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br>        <span class="hljs-type">AccountService</span> <span class="hljs-variable">accountService</span> <span class="hljs-operator">=</span> app.getBean(AccountService.class);<br>        accountService.transfer(<span class="hljs-string">&quot;tom&quot;</span>,<span class="hljs-string">&quot;lucy&quot;</span>,<span class="hljs-number">500</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Spring的事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/Spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B62/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/Spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B62/</url>
    
    <content type="html"><![CDATA[<h1 id="基于XML的声明事务控制"><a href="#基于XML的声明事务控制" class="headerlink" title="基于XML的声明事务控制"></a>基于XML的声明事务控制</h1><h4 id="什么是声明式事务控制"><a href="#什么是声明式事务控制" class="headerlink" title="什么是声明式事务控制"></a>什么是声明式事务控制</h4><h6 id="Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务"><a href="#Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务" class="headerlink" title="Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务"></a>Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务</h6><h5 id="声明式事务处理的作用"><a href="#声明式事务处理的作用" class="headerlink" title="声明式事务处理的作用"></a>声明式事务处理的作用</h5><ul><li><p>事务管理不侵入开发的组件。具体来说业务逻辑对象就不会意识到正在事务管理之中，事实上也应该如此，因为事务管理是属于系统层面的服务，而不是业务逻辑的一部分，如果想要改变事务管理策划的话，也只需要在定义文件中重新配置即可</p></li><li><p>在不需要事务管理的时候，只要在设定文件上修改一下，即可移去事务管理服务，无需改变代码重新编译，这样维护起来极其方便 </p></li><li><h6 id="注意：Spring声明事务控制底层就是AOP"><a href="#注意：Spring声明事务控制底层就是AOP" class="headerlink" title="注意：Spring声明事务控制底层就是AOP"></a>注意：Spring声明事务控制底层就是AOP</h6></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Spring的事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/Spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/Spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="编程式事务控制相关对象"><a href="#编程式事务控制相关对象" class="headerlink" title="编程式事务控制相关对象"></a>编程式事务控制相关对象</h1><h3 id="1，PlatfromTransactionManager"><a href="#1，PlatfromTransactionManager" class="headerlink" title="1，PlatfromTransactionManager"></a>1，PlatfromTransactionManager</h3><h4 id="platfromTransactionManager接口是Spring的事务管理器"><a href="#platfromTransactionManager接口是Spring的事务管理器" class="headerlink" title="platfromTransactionManager接口是Spring的事务管理器"></a>platfromTransactionManager接口是Spring的事务管理器</h4><table><thead><tr><th align="left">方法</th><th>说明</th></tr></thead><tbody><tr><td align="left">TransactionStatus</td><td>获取事务的状态信息</td></tr><tr><td align="left">getTransaction(TranscactionDefination defination)</td><td>获取事务的状态信息</td></tr><tr><td align="left">void commit(TransactionStatus status)</td><td>提交事务</td></tr><tr><td align="left">void rollback(TransactionStatus status)</td><td>回滚事务</td></tr></tbody></table><h6 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h6><p>platfromTransactionManafer 是接口类型，不同的Dao层则有不同的实现类</p><p>例如：</p><p>Dao层技术是jdbc或mybatis时：org.springframework.jdbc.datasource.DataSourceTransactionManager</p><p>Dao层技术是hibernate时：</p><p>org.springframework.orm.hibernate5.HibernateTransactionManager</p><h3 id="2，TransactionDefinition"><a href="#2，TransactionDefinition" class="headerlink" title="2，TransactionDefinition"></a>2，TransactionDefinition</h3><h4 id="TransactionDefinition-是事务的定义信息对象，里面有如下方法"><a href="#TransactionDefinition-是事务的定义信息对象，里面有如下方法" class="headerlink" title="TransactionDefinition   是事务的定义信息对象，里面有如下方法"></a>TransactionDefinition   是事务的定义信息对象，里面有如下方法</h4><table><thead><tr><th>方法</th><th align="left">说明</th></tr></thead><tbody><tr><td>int getIsolationLevel()</td><td align="left">获得事务的隔离级别</td></tr><tr><td>int getPropogationBehavior()</td><td align="left">获得事务的传播行为</td></tr><tr><td>int getTimeout()</td><td align="left">获得超时时间</td></tr><tr><td>boolean isReadOnly()</td><td align="left">是否只读</td></tr></tbody></table><h4 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h4><h5 id="设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读"><a href="#设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读" class="headerlink" title="设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读 "></a>设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读<code> </code></h5><ul><li><p>ISOLATION_DEFAULT</p></li><li><p>ISOLATION_READ_UNCOMMITTED</p><ul><li>读未提交的</li></ul></li><li><p>ISOLATION_READ_COMMITTED</p><ul><li>读以提交的，可以用来解决脏读</li></ul></li><li><p>ISOLATION_REPEATABLE_READ</p><ul><li>可重复读，解决不可重复度</li></ul></li><li><p>ISOLATION_SERIALIZABLE</p><ul><li>都可以解决，但性能较低</li></ul></li></ul><h4 id="事务传播行为"><a href="#事务传播行为" class="headerlink" title="事务传播行为"></a>事务传播行为</h4><ul><li><p>REQUIRED:</p><ul><li>如果当前没有事务就新建一个事务，如果已经存在一个事务中，加入到这个事务中，一般选择的是默认值</li></ul></li><li><p>SUPPORTS:</p><ul><li>支持当前事务，如果当前没有事务，就以非事务方式执行(没有事务)</li></ul></li><li><p>MANDATORY:</p><ul><li>使用当前事务，如果没有当前事务，就抛出异常</li></ul></li><li><p>REQUERS_NEW</p><ul><li>新建事务，如果当前在事务中，把当前事务挂起</li></ul></li><li><p>NOT_SUPPORTED:</p><ul><li>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起</li></ul></li><li><p>NEVER:</p><ul><li>以非事务方式运行，如果当前存在事务，就抛出异常</li></ul></li><li><p>NESTED:</p><ul><li>如果当前存在事务，则在嵌套事务内执行，如果当前没有事务，则回执行REQUIRED类似的操作</li></ul></li><li><p>超时时间：</p><ul><li>默认值是-1，既没有超时限制，如果有，以秒为单位进行设置</li></ul></li><li><p>是否只读：</p><ul><li>建议查询时设置为只读</li></ul></li></ul><h3 id="3，TransactionStatus"><a href="#3，TransactionStatus" class="headerlink" title="3，TransactionStatus"></a>3，TransactionStatus</h3><h4 id="TransactionStatus接口提供的事务具体运行状态，方法如下"><a href="#TransactionStatus接口提供的事务具体运行状态，方法如下" class="headerlink" title="TransactionStatus接口提供的事务具体运行状态，方法如下"></a>TransactionStatus接口提供的事务具体运行状态，方法如下</h4><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">boolean hasSavepoint()</td><td align="center">是否存储回滚点</td></tr><tr><td align="center">boolean isCompleted()</td><td align="center">事务是否完成</td></tr><tr><td align="center">boolean isNewTransaction()</td><td align="center">是否是新事务</td></tr><tr><td align="center">boolean isRollbackOnly()</td><td align="center">事务是否回滚</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>张鸿飞222222222</title>
    <link href="/2022/05/21/b/fwefew/"/>
    <url>/2022/05/21/b/fwefew/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="鸿飞3"><a href="#鸿飞3" class="headerlink" title="鸿飞3"></a>鸿飞3</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;sdfdsfds&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>张鸿飞</title>
    <link href="/2022/05/21/a/hello-world/"/>
    <url>/2022/05/21/a/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="鸿飞2"><a href="#鸿飞2" class="headerlink" title="鸿飞2"></a>鸿飞2</h2><h3 id="鸿飞2-1"><a href="#鸿飞2-1" class="headerlink" title="鸿飞2"></a>鸿飞2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="鸿飞3"><a href="#鸿飞3" class="headerlink" title="鸿飞3"></a>鸿飞3</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;sdfdsfds&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
