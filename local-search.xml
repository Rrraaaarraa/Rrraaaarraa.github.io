<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MyBatis相应的API</title>
    <link href="/2022/05/24/Mybatis/MyBatis%E7%9B%B8%E5%BA%94%E7%9A%84API/"/>
    <url>/2022/05/24/Mybatis/MyBatis%E7%9B%B8%E5%BA%94%E7%9A%84API/</url>
    
    <content type="html"><![CDATA[<h4 id="1，SqlSession工厂构造器SqlSessionFactoryBuilder"><a href="#1，SqlSession工厂构造器SqlSessionFactoryBuilder" class="headerlink" title="1，SqlSession工厂构造器SqlSessionFactoryBuilder"></a>1，SqlSession工厂构造器SqlSessionFactoryBuilder</h4><h5 id="常用API：SqlSessionFactory-build-InputStream-inputStream"><a href="#常用API：SqlSessionFactory-build-InputStream-inputStream" class="headerlink" title="常用API：SqlSessionFactory build(InputStream inputStream)"></a>常用API：SqlSessionFactory build(InputStream inputStream)</h5><h5 id="通过加载mybatis的核心文件的输入流的形式构造一个SqlSessionFactory对象"><a href="#通过加载mybatis的核心文件的输入流的形式构造一个SqlSessionFactory对象" class="headerlink" title="通过加载mybatis的核心文件的输入流的形式构造一个SqlSessionFactory对象"></a>通过加载mybatis的核心文件的输入流的形式构造一个SqlSessionFactory对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;org/mybatis/builder/mybatis-config.xml&quot;</span>;<br><span class="hljs-type">InputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(resource);<br><span class="hljs-type">SqlSessionFactoryBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>();<br><span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">factory</span> <span class="hljs-operator">=</span> builder.build(inputStream);<br></code></pre></td></tr></table></figure><h5 id="其中，Resources工具类，这个类在org-apache-ibatis-io包中。Resources类帮助你从类路径下，文件系统或一个web-URL中加载资源文件"><a href="#其中，Resources工具类，这个类在org-apache-ibatis-io包中。Resources类帮助你从类路径下，文件系统或一个web-URL中加载资源文件" class="headerlink" title="其中，Resources工具类，这个类在org.apache.ibatis.io包中。Resources类帮助你从类路径下，文件系统或一个web URL中加载资源文件"></a>其中，Resources工具类，这个类在org.apache.ibatis.io包中。Resources类帮助你从类路径下，文件系统或一个web URL中加载资源文件</h5><h4 id="2，SqlSession工厂对象SqlSessionFactory"><a href="#2，SqlSession工厂对象SqlSessionFactory" class="headerlink" title="2，SqlSession工厂对象SqlSessionFactory"></a>2，SqlSession工厂对象SqlSessionFactory</h4><h5 id="SqlSessionFactory有多个方法创建SqlSession实例，常用的方法有如下两个"><a href="#SqlSessionFactory有多个方法创建SqlSession实例，常用的方法有如下两个" class="headerlink" title="SqlSessionFactory有多个方法创建SqlSession实例，常用的方法有如下两个"></a>SqlSessionFactory有多个方法创建SqlSession实例，常用的方法有如下两个</h5><table><thead><tr><th align="center">方法</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">openSession()</td><td align="center">会默认开启一个事物，但事务不会自动提交，也就意味着需要手动提交事务，更新操作数据才会持久到数据库中</td></tr><tr><td align="center">openSession(booleanautoCommit)</td><td align="center">参数为是否自动提交，如果设置为true，那么不需要手动提交事务</td></tr></tbody></table><h4 id="3，SqlSession会话对象"><a href="#3，SqlSession会话对象" class="headerlink" title="3，SqlSession会话对象"></a>3，SqlSession会话对象</h4><h5 id="SqlSession实例在MyBatis中是非常强大的一个类，在这里你会看到所有执行语句，提交或回滚事务和映射器实例的方法。执行语句的方法主要有："><a href="#SqlSession实例在MyBatis中是非常强大的一个类，在这里你会看到所有执行语句，提交或回滚事务和映射器实例的方法。执行语句的方法主要有：" class="headerlink" title="SqlSession实例在MyBatis中是非常强大的一个类，在这里你会看到所有执行语句，提交或回滚事务和映射器实例的方法。执行语句的方法主要有："></a>SqlSession实例在MyBatis中是非常强大的一个类，在这里你会看到所有执行语句，提交或回滚事务和映射器实例的方法。执行语句的方法主要有：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;T&gt; T <span class="hljs-title function_">selectOne</span><span class="hljs-params">(String statement,Object parameter)</span><br>&lt;E&gt; List&lt;E&gt; <span class="hljs-title function_">selectList</span><span class="hljs-params">(String statement,Object parameter)</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(String statement,Object parameter)</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">update</span><span class="hljs-params">(String statement,Object parameter)</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(String statement,Object parameter)</span><br></code></pre></td></tr></table></figure><h6 id="执行事务的方法主要有"><a href="#执行事务的方法主要有" class="headerlink" title="执行事务的方法主要有"></a>执行事务的方法主要有</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">void</span> <span class="hljs-title function_">commit</span><span class="hljs-params">()</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">rollvack</span><span class="hljs-params">()</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis的增删改查操作</title>
    <link href="/2022/05/24/Mybatis/MyBatis%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/05/24/Mybatis/MyBatis%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h4 id="1，MyBatis的查询数据操作"><a href="#1，MyBatis的查询数据操作" class="headerlink" title="1，MyBatis的查询数据操作"></a>1，MyBatis的查询数据操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--查询操作--&gt;<br>    &lt;select id=<span class="hljs-string">&quot;findAll&quot;</span> resultType=<span class="hljs-string">&quot;com.itheima.domain.User&quot;</span>&gt;<br>        select *<br>        from user<br>    &lt;/select&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br><span class="hljs-meta">@Test</span><br>    <span class="hljs-comment">//查询操作</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test1</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//获得核心配置文件</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">resourceAsStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;sqlMapConfig.xml&quot;</span>);<br>        <span class="hljs-comment">//获得session工厂对象</span><br>        <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);<br>        <span class="hljs-comment">//获得session回话对象</span><br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>        <span class="hljs-comment">//执行操作 参数：namespace+id</span><br>        List&lt;User&gt; userList = sqlSession.selectList(<span class="hljs-string">&quot;userMapper.findAll&quot;</span>);<br>        <span class="hljs-comment">//打印数据</span><br>        System.out.println(userList);<br>        <span class="hljs-comment">//释放资源</span><br>        sqlSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2，MyBatis的插入数据操作"><a href="#2，MyBatis的插入数据操作" class="headerlink" title="2，MyBatis的插入数据操作"></a>2，MyBatis的插入数据操作</h4><ul><li>插入操作注意问题<ul><li>插入语句使用insert标签</li><li>在映射文件中使用parameterType属性指定要插入的数据类型</li><li>Sql语句中使用#{实体属性名}方式引用实体中的属性值</li><li>插入操作使用的API是sqlSession.insert(“命名空间.id”,实体对象)；</li><li>插入操作涉及数据库数据变化，所以要使用sqlSession对象显示的提交事务<ul><li>既sqlSession.commit()</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--插入操作--&gt;<br>    &lt;insert id=<span class="hljs-string">&quot;save&quot;</span>&gt;<br>        insert into user<br>        <span class="hljs-title function_">values</span> <span class="hljs-params">(#&#123;id&#125;, #&#123;username&#125;, #&#123;password&#125;)</span><br>    &lt;/insert&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test2</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//模拟user对象</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        user.setUsername(<span class="hljs-string">&quot;tom&quot;</span>);<br>        user.setPassword(<span class="hljs-string">&quot;abc&quot;</span>);<br><br>        <span class="hljs-comment">//获得核心配置文件</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">resourceAsStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;sqlMapConfig.xml&quot;</span>);<br>        <span class="hljs-comment">//获得session工厂对象</span><br>        <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);<br>        <span class="hljs-comment">//获得session回话对象</span><br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>        <span class="hljs-comment">//执行操作 参数：namespace+id</span><br>        sqlSession.insert(<span class="hljs-string">&quot;userMapper.save&quot;</span>,user);<br><br>        <span class="hljs-comment">//mybatis执行更新操作 提交事务</span><br>        sqlSession.commit();<br><br>        <span class="hljs-comment">//释放资源</span><br>        sqlSession.close();<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="3，MyBatis修改操作"><a href="#3，MyBatis修改操作" class="headerlink" title="3，MyBatis修改操作"></a>3，MyBatis修改操作</h4><ul><li>修改操作注意问题<ul><li>修改语句使用update标签</li><li>修改操作使用的API是sqlSession.update(“命名空间.id,实体对象”)；</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--修改操作--&gt;<br>    &lt;update id=<span class="hljs-string">&quot;update&quot;</span> parameterType=<span class="hljs-string">&quot;com.itheima.domain.User&quot;</span>&gt;<br>        update user<br>        set username=#&#123;username&#125;,<br>            password=#&#123;password&#125;<br>        where id=#&#123;id&#125;<br>    &lt;/update&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-comment">//修改操作</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test3</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//模拟user对象</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        user.setId(<span class="hljs-number">4</span>);<br>        user.setUsername(<span class="hljs-string">&quot;lucy&quot;</span>);<br>        user.setPassword(<span class="hljs-string">&quot;123&quot;</span>);<br><br>        <span class="hljs-comment">//获得核心配置文件</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">resourceAsStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;sqlMapConfig.xml&quot;</span>);<br>        <span class="hljs-comment">//获得session工厂对象</span><br>        <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);<br>        <span class="hljs-comment">//获得session回话对象</span><br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>        <span class="hljs-comment">//执行操作 参数：namespace+id</span><br>        sqlSession.update(<span class="hljs-string">&quot;userMapper.update&quot;</span>,user);<br><br>        <span class="hljs-comment">//mybatis执行更新操作 提交事务</span><br>        sqlSession.commit();<br><br>        <span class="hljs-comment">//释放资源</span><br>        sqlSession.close();<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="4，MyBatis删除操作"><a href="#4，MyBatis删除操作" class="headerlink" title="4，MyBatis删除操作"></a>4，MyBatis删除操作</h4><ul><li>删除操作注意问题<ul><li>删除语句使用delete标签</li><li>Sql语句中使用#{任意字符}方式引用传递的单个参数</li><li>删除操作使用的API是sqlSession.delete(“命名空间.id”,Object)</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--删除操作--&gt;<br>    &lt;delete id=<span class="hljs-string">&quot;delete&quot;</span> parameterType=<span class="hljs-string">&quot;java.lang.Integer&quot;</span>&gt;<br>        delete from user where id=#&#123;id&#125;<br>    &lt;/delete&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-comment">//删除操作</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test4</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//获得核心配置文件</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">resourceAsStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;sqlMapConfig.xml&quot;</span>);<br>        <span class="hljs-comment">//获得session工厂对象</span><br>        <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);<br>        <span class="hljs-comment">//获得session回话对象</span><br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>        <span class="hljs-comment">//执行操作 参数：namespace+id</span><br>        sqlSession.delete(<span class="hljs-string">&quot;userMapper.delete&quot;</span>,<span class="hljs-number">4</span>);<br>        <span class="hljs-comment">//mybatis执行更新操作 提交事务</span><br>        sqlSession.commit();<br><br>        <span class="hljs-comment">//释放资源</span><br>        sqlSession.close();<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="5，查询一个对象"><a href="#5，查询一个对象" class="headerlink" title="5，查询一个对象"></a>5，查询一个对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--根据id进行查询--&gt;<br>    &lt;select id=<span class="hljs-string">&quot;findById&quot;</span> resultType=<span class="hljs-string">&quot;user&quot;</span> parameterType=<span class="hljs-string">&quot;int&quot;</span>&gt;<br>        select * from user where id=#&#123;id&#125;<br>    &lt;/select&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br><span class="hljs-meta">@Test</span><br>    <span class="hljs-comment">//查询一个对象数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test5</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//获得核心配置文件</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">resourceAsStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;sqlMapConfig.xml&quot;</span>);<br>        <span class="hljs-comment">//获得session工厂对象</span><br>        <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);<br>        <span class="hljs-comment">//获得session回话对象</span><br>         <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>        <span class="hljs-comment">//执行操作 参数：namespace+id</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> sqlSession.selectOne(<span class="hljs-string">&quot;userMapper.findById&quot;</span>, <span class="hljs-number">1</span>);<br>        <span class="hljs-comment">//打印数据</span><br>        System.out.println(user);<br>        <span class="hljs-comment">//释放资源</span><br>        sqlSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis入门开发步骤</title>
    <link href="/2022/05/24/Mybatis/MyBatis%E5%BC%80%E5%8F%91%E6%AD%A5%E9%AA%A4/"/>
    <url>/2022/05/24/Mybatis/MyBatis%E5%BC%80%E5%8F%91%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<h4 id="MyBatis的坐标"><a href="#MyBatis的坐标" class="headerlink" title="MyBatis的坐标"></a>MyBatis的坐标</h4><ul><li><p>添加MyBatis的坐标</p><ul><li>&#96;&#96;&#96; java<dependencies>    <dependency>      <groupId>mysql</groupId>      <artifactId>mysql-connector-java</artifactId>      <version>5.1.32</version>    </dependency>    <dependency>      <groupId>org.mybatis</groupId>      <artifactId>mybatis</artifactId>      <version>3.5.7</version>    </dependency><pre><code class="hljs">&lt;dependency&gt;  &lt;groupId&gt;junit&lt;/groupId&gt;  &lt;artifactId&gt;junit&lt;/artifactId&gt;  &lt;version&gt;4.12&lt;/version&gt;  &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;dependency&gt;  &lt;groupId&gt;log4j&lt;/groupId&gt;  &lt;artifactId&gt;log4j&lt;/artifactId&gt;  &lt;version&gt;1.2.17&lt;/version&gt;&lt;/dependency&gt;</code></pre>  </dependencies><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>+ 创建<span class="hljs-keyword">user</span>数据表<br><br>  + ``` <span class="hljs-keyword">sql</span><br>    <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">user</span> (<br>      id <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> ,<br>      username <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) ,<br>      <span class="hljs-keyword">password</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <br>    ) ;<br>    <br>    <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;zhangsan&#x27;</span>, <span class="hljs-string">&#x27;123&#x27;</span>);<br>    <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;lisi&#x27;</span>, <span class="hljs-string">&#x27;123&#x27;</span>);<br></code></pre></td></tr></table></figure></li></ul></li><li><p>编写User实体类</p><ul><li><p>&#96;&#96;&#96; java<br>public class User {</p><pre><code class="hljs">private int id;private String username;private String password;public int getId() &#123;    return id;&#125;public void setId(int id) &#123;    this.id = id;&#125;public String getUsername() &#123;    return username;&#125;public void setUsername(String username) &#123;    this.username = username;&#125;public String getPassword() &#123;    return password;&#125;public void setPassword(String password) &#123;    this.password = password;&#125;@Overridepublic String toString() &#123;    return &quot;User&#123;&quot; +            &quot;id=&quot; + id +            &quot;, username=&#39;&quot; + username + &#39;\&#39;&#39; +            &quot;, password=&#39;&quot; + password + &#39;\&#39;&#39; +            &#39;&#125;&#39;;&#125;</code></pre><p>}</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>+ 编写映射文件UserMapper.xml<br><br>  + ``` java<br>    <span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br>    <span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br>        <br>    <span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;userMapper&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;findAll&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.itheima.domain.User&quot;</span>&gt;</span><br>            select * from user<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>编写核心文件SqlMapConfig.xml</p><ul><li>&#96;&#96;&#96; java<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd"><configuration>    <!--数据源环境-->    <!--指定默认的环境名称-->    <environments default="developement">        <!--指定当前环境的名称-->        <environment id="developement">            <!--事务管理器-->            <!--指定事务管理类型是JDBC-->            <transactionManager type="JDBC"></transactionManager>            <!--指定当前数据源类型是连接池-->            <dataSource type="POOLED">                <!--数据源配置的基本参数-->                <property name="driver" value="com.mysql.jdbc.Driver"/>                <property name="url" value="jdbc:mysql://localhost:3306/test"/>                <property name="username" value="root"/>                <property name="password" value="1234"/>            </dataSource>        </environment>    </environments><pre><code class="hljs">&lt;!--加载映射文件--&gt;&lt;mappers&gt;    &lt;mapper resource=&quot;com/itheima/mapper/UserMapper.xml&quot;&gt;&lt;/mapper&gt;&lt;/mappers&gt;</code></pre></configuration><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>+ 编写测试类<br><br>  + ``` java<br>    <span class="hljs-keyword">package</span> com.itheima.test;<br>    <br>    <span class="hljs-keyword">import</span> com.itheima.domain.User;<br>    <span class="hljs-keyword">import</span> org.apache.ibatis.io.Resources;<br>    <span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSession;<br>    <span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;<br>    <span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;<br>    <span class="hljs-keyword">import</span> org.junit.Test;<br>    <br>    <span class="hljs-keyword">import</span> java.io.IOException;<br>    <span class="hljs-keyword">import</span> java.io.InputStream;<br>    <span class="hljs-keyword">import</span> java.util.List;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br>    <br>        <span class="hljs-meta">@Test</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test1</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>            <span class="hljs-comment">//获得核心配置文件</span><br>            <span class="hljs-type">InputStream</span> <span class="hljs-variable">resourceAsStream</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;sqlMapConfig.xml&quot;</span>);<br>            <span class="hljs-comment">//获得session工厂对象</span><br>            <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span>   <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(resourceAsStream);<br>            <span class="hljs-comment">//获得session回话对象</span><br>            <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>            <span class="hljs-comment">//执行操作 参数：namespace+id</span><br>            List&lt;User&gt; userList = sqlSession.selectList(<span class="hljs-string">&quot;userMapper.findAll&quot;</span>);<br>            <span class="hljs-comment">//打印数据</span><br>            System.out.println(userList);<br>            <span class="hljs-comment">//释放资源</span><br>            sqlSession.close();<br>        &#125;<br>    &#125;<br>    <br></code></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MyBatis核心配置文件概述</title>
    <link href="/2022/05/24/Mybatis/MyBatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A6%82%E8%BF%B0/"/>
    <url>/2022/05/24/Mybatis/MyBatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h4 id="MyBatis常用配置解析"><a href="#MyBatis常用配置解析" class="headerlink" title="MyBatis常用配置解析"></a>MyBatis常用配置解析</h4><h5 id="1，environments标签"><a href="#1，environments标签" class="headerlink" title="1，environments标签"></a>1，environments标签</h5><h6 id="其中，事务管理器-transactionManager-类型有两种："><a href="#其中，事务管理器-transactionManager-类型有两种：" class="headerlink" title="其中，事务管理器(transactionManager)类型有两种："></a>其中，事务管理器(transactionManager)类型有两种：</h6><ul><li>JDBC：这个配置就是直接使用了JDBC的提交和回滚设置，它依赖于从数据源得到的连接来管理作用域</li><li>MANAGED：这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期(比如JEE应用服务器的上下文)默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将closeConnection属性设置为false来阻止它默认的关闭行为。</li></ul><h6 id="其中，数据源-dataSource-类型有三种："><a href="#其中，数据源-dataSource-类型有三种：" class="headerlink" title="其中，数据源(dataSource)类型有三种："></a>其中，数据源(dataSource)类型有三种：</h6><ul><li>UNPOOLED:这个数据源的实现只是每次被请求时打开和关闭连接。</li><li>POOLED:这种数据源的实现利用”池“的概念将JDBC连接对象组织起来。</li><li>JNDI:这个数据源的实现是为了能在如EJB或应用服务器这类容器中使用，容器可以集中在外部配置数据源，然后放置一个JNDI上下文的引用</li></ul><h5 id="2，mappers标签"><a href="#2，mappers标签" class="headerlink" title="2，mappers标签"></a>2，mappers标签</h5><h6 id="该标签的作用是加载映射的，加载方式有如下几种"><a href="#该标签的作用是加载映射的，加载方式有如下几种" class="headerlink" title="该标签的作用是加载映射的，加载方式有如下几种:"></a>该标签的作用是加载映射的，加载方式有如下几种:</h6><ul><li><p>使用相对于类路径的资源引用，</p><ul><li>例如<mapper resource="org/mybatis/builder/AuthorMapepr.xml/"></li></ul></li><li><p>使用完全限定资源定位符(URL),</p><ul><li>例如<mapper url="file:///var/mappers/AuthorMapper.xml/"></li></ul></li><li><p>使用映射器接口实现类的完全限定类名，</p><ul><li>例如<mapper class="org.mybatis.builder.AuthorMapper/"></li></ul></li><li><p>将包装的映射器接口实现全部注册为映射器，</p><ul><li>例如<package name="org.mybatis.builder/ "></li></ul></li></ul><h5 id="3，Properties标签"><a href="#3，Properties标签" class="headerlink" title="3，Properties标签"></a>3，Properties标签</h5><h6 id="实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外的properties文件"><a href="#实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外的properties文件" class="headerlink" title="实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外的properties文件"></a>实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外的properties文件</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//在resources下创建jdbc.properties文件</span><br>jdbc.driver=com.mysql.jdbc.Driver<br>jdbc.url=jdbc:mysql:<span class="hljs-comment">//localhost:3306/test</span><br>jdbc.username=root<br>jdbc.password=<span class="hljs-number">1234</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--通过properties标签加载外部properties文件--&gt;<br>    &lt;properties resource=<span class="hljs-string">&quot;jdbc.properties&quot;</span>&gt;&lt;/properties&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;property name=<span class="hljs-string">&quot;driver&quot;</span> value=<span class="hljs-string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;<br>            &lt;property name=<span class="hljs-string">&quot;url&quot;</span> value=<span class="hljs-string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;<br>            &lt;property name=<span class="hljs-string">&quot;username&quot;</span> value=<span class="hljs-string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;<br>            &lt;property name=<span class="hljs-string">&quot;password&quot;</span> value=<span class="hljs-string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><h5 id="4，typeAliases标签"><a href="#4，typeAliases标签" class="headerlink" title="4，typeAliases标签"></a>4，typeAliases标签</h5><h6 id="类型别名是为java类型设置一个短的名字，原来的类型名称配置如下"><a href="#类型别名是为java类型设置一个短的名字，原来的类型名称配置如下" class="headerlink" title="类型别名是为java类型设置一个短的名字，原来的类型名称配置如下"></a>类型别名是为java类型设置一个短的名字，原来的类型名称配置如下</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--查询操作--&gt;<br>&lt;select id=<span class="hljs-string">&quot;findAll&quot;</span> resultType=<span class="hljs-string">&quot;com.itheima.domain.User&quot;</span>&gt;<br>        select *<br>        from user<br>&lt;/select&gt;<br></code></pre></td></tr></table></figure><h6 id="配置typeAliases，为com-itheima-domain-User定义别名为user"><a href="#配置typeAliases，为com-itheima-domain-User定义别名为user" class="headerlink" title="配置typeAliases，为com.itheima.domain.User定义别名为user"></a>配置typeAliases，为com.itheima.domain.User定义别名为user</h6><ul><li>注意事项：在配置时要将typeAliases放置在environments标签前</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--定义别名--&gt;<br>&lt;typeAliases&gt;<br>        &lt;typeAlias type=<span class="hljs-string">&quot;com.itheima.domain.User&quot;</span> alias=<span class="hljs-string">&quot;user&quot;</span>&gt;&lt;/typeAlias&gt;<br>&lt;/typeAliases&gt;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--查询操作--&gt;<br>    &lt;select id=<span class="hljs-string">&quot;findAll&quot;</span> resultType=<span class="hljs-string">&quot;user&quot;</span>&gt;<br>        select *<br>        from user<br>    &lt;/select&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis简介</title>
    <link href="/2022/05/24/Mybatis/Mybatis%E7%AE%80%E4%BB%8B/"/>
    <url>/2022/05/24/Mybatis/Mybatis%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h4 id="原始jdbc操作的分析"><a href="#原始jdbc操作的分析" class="headerlink" title="原始jdbc操作的分析"></a>原始jdbc操作的分析</h4><h5 id="原始jdbc开发存在的问题如下："><a href="#原始jdbc开发存在的问题如下：" class="headerlink" title="原始jdbc开发存在的问题如下："></a>原始jdbc开发存在的问题如下：</h5><ul><li>数据库连接创建，释放频繁造成系统资源浪费从而影响系统性能</li><li>sql语句在代码中硬编码，造成代码不易维护，实际应用sql变化的可能性不大，sql变动需要改变java代码</li><li>查询操作时，需要手动将结果集中的数据手动封装到实体中。插入操作时，需要手动将实体的数据设置到sql语句的占位符位置</li></ul><h5 id="应对上述问题给出的解决方案："><a href="#应对上述问题给出的解决方案：" class="headerlink" title="应对上述问题给出的解决方案："></a>应对上述问题给出的解决方案：</h5><ul><li>使用数据库连接池初始化链接资源</li><li>将sql语句抽取到xml配置文件中</li><li>使用反射，内省等底层技术，自动将实体与表进行属性与字段的自动映射</li></ul><h5 id="什么是Mybatis"><a href="#什么是Mybatis" class="headerlink" title="什么是Mybatis"></a>什么是Mybatis</h5><ul><li>mybatis是一个优秀的基于java的持久层框架，它内部封装了jdbc，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动，创建连接，创建statement等繁琐过程。</li><li>mybatis通过xml或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中的sql的动态参数进行映射生成最终执行的sql语句。</li><li>最后mybatis框架执行sql并将结果映射为java对象并返回。采用ORM思想解决了实体和数据库映射的问题，对jdbc进行了封装，屏蔽了jdbc api底层访问细节，使我们不用与jdbc api打交道，就可以完成对数据库的持久化操作。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>转账业务基于注解的声明式事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h4 id="1，导入坐标"><a href="#1，导入坐标" class="headerlink" title="1，导入坐标"></a>1，导入坐标</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//设置jdk版本</span><br>&lt;properties&gt;<br>    &lt;maven.compiler.source&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.source&gt;<br>    &lt;maven.compiler.target&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.target&gt;<br>&lt;/properties&gt;<br>    <br>&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br>      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">1.9</span><span class="hljs-number">.7</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-test&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;c3p0&lt;/groupId&gt;<br>      &lt;artifactId&gt;c3p0&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">0.9</span><span class="hljs-number">.1</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;mysql&lt;/groupId&gt;<br>      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.1</span><span class="hljs-number">.32</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;junit&lt;/groupId&gt;<br>      &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">4.12</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>  &lt;/dependencies&gt;<br></code></pre></td></tr></table></figure><h4 id="2-创建实体类Account"><a href="#2-创建实体类Account" class="headerlink" title="2,创建实体类Account"></a>2,创建实体类Account</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Account</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> money;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getMoney</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> money;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMoney</span><span class="hljs-params">(<span class="hljs-type">double</span> money)</span> &#123;<br>        <span class="hljs-built_in">this</span>.money = money;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-Dao层接口与实现"><a href="#3-Dao层接口与实现" class="headerlink" title="3,Dao层接口与实现"></a>3,Dao层接口与实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接口</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">AccountDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan,<span class="hljs-type">double</span> money)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan,<span class="hljs-type">double</span> money)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//实现</span><br> <span class="hljs-meta">@Repository(&quot;accountDao&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountDao</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> JdbcTemplate jdbcTemplate;<br>   <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money-? where name=?&quot;</span>,money,outMan);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money+? where name=?&quot;</span>,money,inMan);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4，Service业务层调用Dao层"><a href="#4，Service业务层调用Dao层" class="headerlink" title="4，Service业务层调用Dao层"></a>4，Service业务层调用Dao层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;accountService&quot;)</span><br><span class="hljs-meta">@Transactional(isolation = Isolation.REPEATABLE_READ)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountService</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> AccountDao accountDao;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAccountDao</span><span class="hljs-params">(AccountDao accountDao)</span> &#123;<br>        <span class="hljs-built_in">this</span>.accountDao = accountDao;<br>    &#125;<br><br>    <span class="hljs-meta">@Transactional(isolation = Isolation.READ_COMMITTED,propagation = Propagation.REQUIRED)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transfer</span><span class="hljs-params">(String outMan, String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        accountDao.out(outMan,money);<br>        accountDao.in(inMan,money);<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">xxx</span><span class="hljs-params">()</span>&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="5-web层调用业务层"><a href="#5-web层调用业务层" class="headerlink" title="5,web层调用业务层"></a>5,web层调用业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountController</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">app</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span>    <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br>        <span class="hljs-type">AccountService</span> <span class="hljs-variable">accountService</span> <span class="hljs-operator">=</span> app.getBean(AccountService.class);<br>        accountService.transfer(<span class="hljs-string">&quot;tom&quot;</span>,<span class="hljs-string">&quot;lucy&quot;</span>,<span class="hljs-number">500</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-applicationContext-xml文件配置"><a href="#6-applicationContext-xml文件配置" class="headerlink" title="6,applicationContext.xml文件配置"></a>6,applicationContext.xml文件配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;beans xmlns=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span><br>       xmlns:xsi=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br>       xmlns:aop=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop&quot;</span><br>       xmlns:context=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span><br>       xmlns:tx=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span><br>       xsi:schemaLocation=<span class="hljs-string">&quot;</span><br><span class="hljs-string">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="hljs-string">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span><br><span class="hljs-string">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span><br><span class="hljs-string">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</span><br><span class="hljs-string">&quot;</span>&gt;<br><br>    &lt;!--主键扫描--&gt;<br>    &lt;context:component-scan base-<span class="hljs-keyword">package</span>=<span class="hljs-string">&quot;com.itheima&quot;</span>/&gt;<br><br>    &lt;bean id=<span class="hljs-string">&quot;dataSource&quot;</span> class=<span class="hljs-string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;driverClass&quot;</span> value=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;jdbcUrl&quot;</span> value=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;user&quot;</span> value=<span class="hljs-string">&quot;root&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;password&quot;</span> value=<span class="hljs-string">&quot;1234&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;bean id=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> class=<span class="hljs-string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;dataSource&quot;</span> ref=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;bean id=<span class="hljs-string">&quot;accountDao&quot;</span> class=<span class="hljs-string">&quot;com.itheima.dao.impl.AccountDaoImpl&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> ref=<span class="hljs-string">&quot;jdbcTemplate&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;!--目标对象  内部的方法就是切点--&gt;<br>    &lt;bean id=<span class="hljs-string">&quot;accountService&quot;</span> class=<span class="hljs-string">&quot;com.itheima.service.impl.AccountServiceImpl&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;accountDao&quot;</span> ref=<span class="hljs-string">&quot;accountDao&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br><br>    &lt;!--配资平台事务管理器--&gt;<br>    &lt;bean id=<span class="hljs-string">&quot;transactionManager&quot;</span> class=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;dataSource&quot;</span> ref=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;!--事务的注解驱动--&gt;<br>    &lt;tx:annotation-driven transaction-manager=<span class="hljs-string">&quot;transactionManager&quot;</span>/&gt;<br><br><br>&lt;/beans&gt;  <br></code></pre></td></tr></table></figure><h4 id="7-注解配置声明式事务控制解析"><a href="#7-注解配置声明式事务控制解析" class="headerlink" title="7,注解配置声明式事务控制解析"></a>7,注解配置声明式事务控制解析</h4><ul><li>使用@Transactional在需要进行事务控制的类或是方法上修饰，注解可用的属性同xml配置方式，例如隔离级别，传播行为等。</li><li>注解使用在类上，那么该类下的所有方法都使用同一套注解参数配置</li><li>使用在方法上，不同的方法可以采用不同的事务参数进行配置</li><li>Xml配置文件中要开启事务的注解驱动<a href="tx:annotation-driven/">tx:annotation-driven/</a></li></ul><h4 id="8-注解声明式事务控制的配置要点"><a href="#8-注解声明式事务控制的配置要点" class="headerlink" title="8,注解声明式事务控制的配置要点"></a>8,注解声明式事务控制的配置要点</h4><ul><li><p>平台事务管理器配置(xml 方式)</p><ul><li>&#96;&#96;&#96; java<!--配资平台事务管理器--><pre><code class="hljs">&lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;&lt;/bean&gt;</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>+ 事务通知的配置(@Transactional注解配置)<br><br>+ 事务注解驱动的配置<span class="hljs-tag">&lt;<span class="hljs-name">tx:annotation-driven</span>&gt;</span><br><br>  + ``` java<br>    //注解驱动<br>    <span class="hljs-comment">&lt;!--事务的注解驱动--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tx:annotation-driven</span> <span class="hljs-attr">transaction-manager</span>=<span class="hljs-string">&quot;transactionManager&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>转账业务基于xml的声明式事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E5%9F%BA%E4%BA%8Exml%E7%9A%84%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E5%9F%BA%E4%BA%8Exml%E7%9A%84%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h6 id="声明式事务控制明确事项"><a href="#声明式事务控制明确事项" class="headerlink" title="声明式事务控制明确事项"></a>声明式事务控制明确事项</h6><ul><li>谁是切点？</li><li>谁是通知？</li><li>谁是切面？</li></ul><h4 id="1，导入坐标"><a href="#1，导入坐标" class="headerlink" title="1，导入坐标"></a>1，导入坐标</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//设置jdk版本</span><br>&lt;properties&gt;<br>    &lt;maven.compiler.source&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.source&gt;<br>    &lt;maven.compiler.target&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.target&gt;<br>&lt;/properties&gt;<br>    <br>&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br>      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">1.9</span><span class="hljs-number">.7</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-test&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;c3p0&lt;/groupId&gt;<br>      &lt;artifactId&gt;c3p0&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">0.9</span><span class="hljs-number">.1</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;mysql&lt;/groupId&gt;<br>      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.1</span><span class="hljs-number">.32</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;junit&lt;/groupId&gt;<br>      &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">4.12</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>  &lt;/dependencies&gt;<br></code></pre></td></tr></table></figure><h4 id="2-创建实体类Account"><a href="#2-创建实体类Account" class="headerlink" title="2,创建实体类Account"></a>2,创建实体类Account</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Account</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> money;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getMoney</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> money;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMoney</span><span class="hljs-params">(<span class="hljs-type">double</span> money)</span> &#123;<br>        <span class="hljs-built_in">this</span>.money = money;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-Dao层接口与实现"><a href="#3-Dao层接口与实现" class="headerlink" title="3,Dao层接口与实现"></a>3,Dao层接口与实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接口</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">AccountDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan,<span class="hljs-type">double</span> money)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan,<span class="hljs-type">double</span> money)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//实现</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountDao</span> &#123;<br><br>    <span class="hljs-keyword">private</span> JdbcTemplate jdbcTemplate;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setJdbcTemplate</span><span class="hljs-params">(JdbcTemplate jdbcTemplate)</span> &#123;<br>        <span class="hljs-built_in">this</span>.jdbcTemplate = jdbcTemplate;<br>    &#125;<br>    <br><span class="hljs-comment">//转出钱的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money-? where name=?&quot;</span>,money,outMan);<br>    &#125;<br><br>    <span class="hljs-comment">//转入钱的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money+? where name=?&quot;</span>,money,inMan);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4，Service业务层调用Dao层"><a href="#4，Service业务层调用Dao层" class="headerlink" title="4，Service业务层调用Dao层"></a>4，Service业务层调用Dao层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountService</span> &#123;<br><br>    <span class="hljs-keyword">private</span> AccountDao accountDao;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAccountDao</span><span class="hljs-params">(AccountDao accountDao)</span> &#123;<br>        <span class="hljs-built_in">this</span>.accountDao = accountDao;<br>    &#125;<br><br>    <span class="hljs-comment">//转账方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transfer</span><span class="hljs-params">(String outMan, String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        accountDao.out(outMan,money);<br>        accountDao.in(inMan,money);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="5-web层调用业务层"><a href="#5-web层调用业务层" class="headerlink" title="5,web层调用业务层"></a>5,web层调用业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountController</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">app</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span>    <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br>        <span class="hljs-type">AccountService</span> <span class="hljs-variable">accountService</span> <span class="hljs-operator">=</span> app.getBean(AccountService.class);<br>        accountService.transfer(<span class="hljs-string">&quot;tom&quot;</span>,<span class="hljs-string">&quot;lucy&quot;</span>,<span class="hljs-number">500</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-applicationContext-xml文件配置"><a href="#6-applicationContext-xml文件配置" class="headerlink" title="6,applicationContext.xml文件配置"></a>6,applicationContext.xml文件配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;beans xmlns=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span><br>       xmlns:xsi=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br>       xmlns:aop=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop&quot;</span><br>       xmlns:tx=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span><br>       xsi:schemaLocation=<span class="hljs-string">&quot;</span><br><span class="hljs-string">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="hljs-string">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd</span><br><span class="hljs-string">       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd</span><br><span class="hljs-string">&quot;</span>&gt;<br><br>    &lt;bean id=<span class="hljs-string">&quot;dataSource&quot;</span> class=<span class="hljs-string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;driverClass&quot;</span> value=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;jdbcUrl&quot;</span> value=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;user&quot;</span> value=<span class="hljs-string">&quot;root&quot;</span>/&gt;<br>        &lt;property name=<span class="hljs-string">&quot;password&quot;</span> value=<span class="hljs-string">&quot;1234&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;bean id=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> class=<span class="hljs-string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;dataSource&quot;</span> ref=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;bean id=<span class="hljs-string">&quot;accountDao&quot;</span> class=<span class="hljs-string">&quot;com.itheima.dao.impl.AccountDaoImpl&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> ref=<span class="hljs-string">&quot;jdbcTemplate&quot;</span>/&gt;<br>    &lt;/bean&gt;<br><br>    &lt;!--目标对象  内部的方法就是切点--&gt;<br>    &lt;bean id=<span class="hljs-string">&quot;accountService&quot;</span> class=<span class="hljs-string">&quot;com.itheima.service.impl.AccountServiceImpl&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;accountDao&quot;</span> ref=<span class="hljs-string">&quot;accountDao&quot;</span>/&gt;<br>    &lt;/bean&gt;      <br></code></pre></td></tr></table></figure><h4 id="7-xml配置要点"><a href="#7-xml配置要点" class="headerlink" title="7,xml配置要点"></a>7,xml配置要点</h4><h5 id="声明式事务控制的配置要点"><a href="#声明式事务控制的配置要点" class="headerlink" title="声明式事务控制的配置要点"></a>声明式事务控制的配置要点</h5><ul><li><p>平台事务管理器配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--配资平台事务管理器--&gt;<br>    &lt;bean id=<span class="hljs-string">&quot;transactionManager&quot;</span> class=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;<br>        &lt;property name=<span class="hljs-string">&quot;dataSource&quot;</span> ref=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;<br>    &lt;/bean&gt;<br></code></pre></td></tr></table></figure></li><li><p>事务通知的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--通知 事物的增强--&gt;<br>    &lt;tx:advice id=<span class="hljs-string">&quot;txAdvice&quot;</span> transaction-manager=<span class="hljs-string">&quot;transactionManager&quot;</span>&gt;<br>        &lt;!--设置事务的属性信息--&gt;<br>        &lt;tx:attributes&gt;<br>            &lt;tx:method name=<span class="hljs-string">&quot;save&quot;</span> <br>                isolation=<span class="hljs-string">&quot;REPEATABLE_READ&quot;</span> propagation=<span class="hljs-string">&quot;REQUIRED&quot;</span> read-only=<span class="hljs-string">&quot;false&quot;</span>/&gt;<br>            &lt;tx:method name=<span class="hljs-string">&quot;*&quot;</span>/&gt;<br>        &lt;/tx:attributes&gt;<br>    &lt;/tx:advice&gt;<br>        <span class="hljs-comment">//其中 &lt;tx:method&gt;代表切点方法的事务参数的配置</span><br>        <span class="hljs-comment">//name：切点的名称</span><br>        <span class="hljs-comment">//isolation：事务的隔离级别</span><br>        <span class="hljs-comment">//propogation：事务的传播行为</span><br>        <span class="hljs-comment">//timeout：超时时间</span><br>        <span class="hljs-comment">//read-only：是否只读</span><br></code></pre></td></tr></table></figure></li><li><p>事务aop织入的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--配置事务的aop织入--&gt;<br>    &lt;aop:config&gt;<br>        &lt;aop:pointcut id=<span class="hljs-string">&quot;txPointcut&quot;</span> expression=<span class="hljs-string">&quot;execution(* com.itheima.service.impl.*.*(..))&quot;</span>/&gt;<br>        &lt;aop:advisor advice-ref=<span class="hljs-string">&quot;txAdvice&quot;</span> pointcut-ref=<span class="hljs-string">&quot;txPointcut&quot;</span>/&gt;<br>    &lt;/aop:config&gt;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>转账业务环境搭建</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E8%BD%AC%E8%B4%A6%E4%B8%9A%E5%8A%A1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h4 id="1，导入坐标"><a href="#1，导入坐标" class="headerlink" title="1，导入坐标"></a>1，导入坐标</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//设置jdk版本</span><br>&lt;properties&gt;<br>    &lt;maven.compiler.source&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.source&gt;<br>    &lt;maven.compiler.target&gt;<span class="hljs-number">11</span>&lt;/maven.compiler.target&gt;<br>&lt;/properties&gt;<br>    <br>&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br>      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">1.9</span><span class="hljs-number">.7</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;org.springframework&lt;/groupId&gt;<br>      &lt;artifactId&gt;spring-test&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.0</span><span class="hljs-number">.5</span>.RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;c3p0&lt;/groupId&gt;<br>      &lt;artifactId&gt;c3p0&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">0.9</span><span class="hljs-number">.1</span><span class="hljs-number">.2</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;mysql&lt;/groupId&gt;<br>      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">5.1</span><span class="hljs-number">.32</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>      &lt;groupId&gt;junit&lt;/groupId&gt;<br>      &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>      &lt;version&gt;<span class="hljs-number">4.12</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>  &lt;/dependencies&gt;<br></code></pre></td></tr></table></figure><h4 id="2-创建实体类Account"><a href="#2-创建实体类Account" class="headerlink" title="2,创建实体类Account"></a>2,创建实体类Account</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Account</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> money;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getMoney</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> money;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMoney</span><span class="hljs-params">(<span class="hljs-type">double</span> money)</span> &#123;<br>        <span class="hljs-built_in">this</span>.money = money;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-Dao层接口与实现"><a href="#3-Dao层接口与实现" class="headerlink" title="3,Dao层接口与实现"></a>3,Dao层接口与实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接口</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">AccountDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan,<span class="hljs-type">double</span> money)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan,<span class="hljs-type">double</span> money)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//实现</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountDao</span> &#123;<br><br>    <span class="hljs-keyword">private</span> JdbcTemplate jdbcTemplate;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setJdbcTemplate</span><span class="hljs-params">(JdbcTemplate jdbcTemplate)</span> &#123;<br>        <span class="hljs-built_in">this</span>.jdbcTemplate = jdbcTemplate;<br>    &#125;<br>    <br><span class="hljs-comment">//转出钱的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">out</span><span class="hljs-params">(String outMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money-? where name=?&quot;</span>,money,outMan);<br>    &#125;<br><br>    <span class="hljs-comment">//转入钱的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">in</span><span class="hljs-params">(String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        jdbcTemplate.update<br>            (<span class="hljs-string">&quot;update account set money=money+? where name=?&quot;</span>,money,inMan);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4，Service业务层调用Dao层"><a href="#4，Service业务层调用Dao层" class="headerlink" title="4，Service业务层调用Dao层"></a>4，Service业务层调用Dao层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">AccountService</span> &#123;<br><br>    <span class="hljs-keyword">private</span> AccountDao accountDao;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAccountDao</span><span class="hljs-params">(AccountDao accountDao)</span> &#123;<br>        <span class="hljs-built_in">this</span>.accountDao = accountDao;<br>    &#125;<br><br>    <span class="hljs-comment">//转账方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transfer</span><span class="hljs-params">(String outMan, String inMan, <span class="hljs-type">double</span> money)</span> &#123;<br>        accountDao.out(outMan,money);<br>        accountDao.in(inMan,money);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="5-web层调用业务层"><a href="#5-web层调用业务层" class="headerlink" title="5,web层调用业务层"></a>5,web层调用业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AccountController</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">app</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span>    <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;applicationContext.xml&quot;</span>);<br>        <span class="hljs-type">AccountService</span> <span class="hljs-variable">accountService</span> <span class="hljs-operator">=</span> app.getBean(AccountService.class);<br>        accountService.transfer(<span class="hljs-string">&quot;tom&quot;</span>,<span class="hljs-string">&quot;lucy&quot;</span>,<span class="hljs-number">500</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>基于XML的声明事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E5%9F%BA%E4%BA%8EXML%E7%9A%84%E5%A3%B0%E6%98%8E%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/%E5%9F%BA%E4%BA%8EXML%E7%9A%84%E5%A3%B0%E6%98%8E%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h4 id="什么是声明式事务控制"><a href="#什么是声明式事务控制" class="headerlink" title="什么是声明式事务控制"></a>什么是声明式事务控制</h4><h6 id="Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务"><a href="#Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务" class="headerlink" title="Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务"></a>Spring的声明式事务顾名思义就是采用声明式的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声明式的处理事务来代替代码式的处理事务</h6><h5 id="声明式事务处理的作用"><a href="#声明式事务处理的作用" class="headerlink" title="声明式事务处理的作用"></a>声明式事务处理的作用</h5><ul><li><p>事务管理不侵入开发的组件。具体来说业务逻辑对象就不会意识到正在事务管理之中，事实上也应该如此，因为事务管理是属于系统层面的服务，而不是业务逻辑的一部分，如果想要改变事务管理策划的话，也只需要在定义文件中重新配置即可</p></li><li><p>在不需要事务管理的时候，只要在设定文件上修改一下，即可移去事务管理服务，无需改变代码重新编译，这样维护起来极其方便 </p></li><li><h6 id="注意：Spring声明事务控制底层就是AOP"><a href="#注意：Spring声明事务控制底层就是AOP" class="headerlink" title="注意：Spring声明事务控制底层就是AOP"></a>注意：Spring声明事务控制底层就是AOP</h6></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Spring的事务控制</title>
    <link href="/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/Spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/05/23/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6/Spring%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="编程式事务控制相关对象"><a href="#编程式事务控制相关对象" class="headerlink" title="编程式事务控制相关对象"></a>编程式事务控制相关对象</h1><h3 id="1，PlatfromTransactionManager"><a href="#1，PlatfromTransactionManager" class="headerlink" title="1，PlatfromTransactionManager"></a>1，PlatfromTransactionManager</h3><h4 id="platfromTransactionManager接口是Spring的事务管理器"><a href="#platfromTransactionManager接口是Spring的事务管理器" class="headerlink" title="platfromTransactionManager接口是Spring的事务管理器"></a>platfromTransactionManager接口是Spring的事务管理器</h4><table><thead><tr><th align="left">方法</th><th>说明</th></tr></thead><tbody><tr><td align="left">TransactionStatus</td><td>获取事务的状态信息</td></tr><tr><td align="left">getTransaction(TranscactionDefination defination)</td><td>获取事务的状态信息</td></tr><tr><td align="left">void commit(TransactionStatus status)</td><td>提交事务</td></tr><tr><td align="left">void rollback(TransactionStatus status)</td><td>回滚事务</td></tr></tbody></table><h6 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h6><p>platfromTransactionManafer 是接口类型，不同的Dao层则有不同的实现类</p><p>例如：</p><p>Dao层技术是jdbc或mybatis时：org.springframework.jdbc.datasource.DataSourceTransactionManager</p><p>Dao层技术是hibernate时：</p><p>org.springframework.orm.hibernate5.HibernateTransactionManager</p><h3 id="2，TransactionDefinition"><a href="#2，TransactionDefinition" class="headerlink" title="2，TransactionDefinition"></a>2，TransactionDefinition</h3><h4 id="TransactionDefinition-是事务的定义信息对象，里面有如下方法"><a href="#TransactionDefinition-是事务的定义信息对象，里面有如下方法" class="headerlink" title="TransactionDefinition   是事务的定义信息对象，里面有如下方法"></a>TransactionDefinition   是事务的定义信息对象，里面有如下方法</h4><table><thead><tr><th>方法</th><th align="left">说明</th></tr></thead><tbody><tr><td>int getIsolationLevel()</td><td align="left">获得事务的隔离级别</td></tr><tr><td>int getPropogationBehavior()</td><td align="left">获得事务的传播行为</td></tr><tr><td>int getTimeout()</td><td align="left">获得超时时间</td></tr><tr><td>boolean isReadOnly()</td><td align="left">是否只读</td></tr></tbody></table><h4 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h4><h5 id="设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读"><a href="#设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读" class="headerlink" title="设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读 "></a>设置隔离级别，可以解决事务并发产生的问题，如脏读，不可重复读和虚读<code> </code></h5><ul><li><p>ISOLATION_DEFAULT</p></li><li><p>ISOLATION_READ_UNCOMMITTED</p><ul><li>读未提交的</li></ul></li><li><p>ISOLATION_READ_COMMITTED</p><ul><li>读以提交的，可以用来解决脏读</li></ul></li><li><p>ISOLATION_REPEATABLE_READ</p><ul><li>可重复读，解决不可重复度</li></ul></li><li><p>ISOLATION_SERIALIZABLE</p><ul><li>都可以解决，但性能较低</li></ul></li></ul><h4 id="事务传播行为"><a href="#事务传播行为" class="headerlink" title="事务传播行为"></a>事务传播行为</h4><ul><li><p>REQUIRED:</p><ul><li>如果当前没有事务就新建一个事务，如果已经存在一个事务中，加入到这个事务中，一般选择的是默认值</li></ul></li><li><p>SUPPORTS:</p><ul><li>支持当前事务，如果当前没有事务，就以非事务方式执行(没有事务)</li></ul></li><li><p>MANDATORY:</p><ul><li>使用当前事务，如果没有当前事务，就抛出异常</li></ul></li><li><p>REQUERS_NEW</p><ul><li>新建事务，如果当前在事务中，把当前事务挂起</li></ul></li><li><p>NOT_SUPPORTED:</p><ul><li>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起</li></ul></li><li><p>NEVER:</p><ul><li>以非事务方式运行，如果当前存在事务，就抛出异常</li></ul></li><li><p>NESTED:</p><ul><li>如果当前存在事务，则在嵌套事务内执行，如果当前没有事务，则回执行REQUIRED类似的操作</li></ul></li><li><p>超时时间：</p><ul><li>默认值是-1，既没有超时限制，如果有，以秒为单位进行设置</li></ul></li><li><p>是否只读：</p><ul><li>建议查询时设置为只读</li></ul></li></ul><h3 id="3，TransactionStatus"><a href="#3，TransactionStatus" class="headerlink" title="3，TransactionStatus"></a>3，TransactionStatus</h3><h4 id="TransactionStatus接口提供的事务具体运行状态，方法如下"><a href="#TransactionStatus接口提供的事务具体运行状态，方法如下" class="headerlink" title="TransactionStatus接口提供的事务具体运行状态，方法如下"></a>TransactionStatus接口提供的事务具体运行状态，方法如下</h4><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">boolean hasSavepoint()</td><td align="center">是否存储回滚点</td></tr><tr><td align="center">boolean isCompleted()</td><td align="center">事务是否完成</td></tr><tr><td align="center">boolean isNewTransaction()</td><td align="center">是否是新事务</td></tr><tr><td align="center">boolean isRollbackOnly()</td><td align="center">事务是否回滚</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
